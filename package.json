{
  "name": "grunt-cloudinary",
  "description": "Uploads specified static files to cloudinary and replaces occurences",
  "version": "0.3.2",
  "homepage": "https://github.com/albert-cyberhulk/grunt-cloudinary",
  "author": {
    "name": "Albert Cyberhulk",
    "email": "albert@cyberhulk.net",
    "url": "http://www.cyberhulk.net"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/albert-cyberhulk/grunt-cloudinary.git"
  },
  "bugs": {
    "url": "https://github.com/albert-cyberhulk/grunt-cloudinary/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/albert-cyberhulk/grunt-cloudinary/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt": "~0.4.5",
    "grunt-contrib-clean": "^0.5.0",
    "grunt-contrib-jshint": "^0.9.2",
    "grunt-contrib-nodeunit": "^0.3.3"
  },
  "peerDependencies": {
    "grunt": ">=0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "Albert Cyberhulk",
    "http://www.cyberhulk.net",
    "cloudinary"
  ],
  "dependencies": {
    "async": "^1.5.0",
    "cloudinary": "^1.2.5",
    "underscore": "^1.8.3"
  },
  "readme": "# grunt-cloudinary\n\n> Uploads specified static files to cloudinary\n\n## Getting Started\nThis plugin requires Grunt `~0.4.5`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-cloudinary --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-cloudinary');\n```\n\n## The 'cloudinary' task\n\n### Overview\nIn your project's Gruntfile, add a section named `cloudinary` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  cloudinary: {\n      // Options for cloudinary\n      options: {},\n      // source files to be processed\n      files: [{}]\n    }\n});\n```\n\n### Options\n\n#### options.remove\nType: `Boolean`\nDefault value: `false`\n\nA Boolean value that is used remove the src files after upload (to be done in next release...).\n\n#### options.replace\nType: `Boolean`\nDefault value: `false`\n\nA Boolean value that is used to replace all occurrences\n\n#### options.dir\nType: `String`\nDefault value: `empty string`\n\nA String value that is used to indicate the path where all occurrences in project should be replaced (removal to be done in next release...)\n\n### Usage Examples\n\n#### Simplified Options\nIn this example, the simplified options are used to upload files to cloudinary\n\n```js\ngrunt.initConfig({\n  cloudinary: {\n    options: {\n      credentials: { // cloudinary credentials\n        'api_key': 'yourapikey',\n        'api_secret': 'yourapisecret',\n        'cloud_name': 'yourcloudnamehere'\n      }\n    },\n    files: [{\n      expand: true, // should be set to true to find whole path\n      cwd: '<%= project.dist %>',\n      src: [\n        'images/**/*.ico', 'images/**/*.png', 'images/**/*.jpeg',\n        'scripts/**/*.js', 'scripts/**/*.js'\n      ]\n    }]\n  }\n});\n```\n\n#### Custom Options\nSee full example with upload and replace options enabled\n\n```js\ngrunt.initConfig({\n  cloudinary: {\n    // Options for cloudinary\n    options: {\n      replace: true, // replaces originals with uploaded ones // default false\n      // in case replace is false find and replace all occurrences is not enabled\n      dir: '<%= project.dist %>/', // path where the occurrences should be replaced // defaults to \"\"\n      credentials: { // cloudinary credentials\n        'api_key': 'yourapikey',\n        'api_secret': 'yourapisecret',\n        'cloud_name': 'yourcloudnamehere'\n      }\n    },\n    // source files to be processed\n    files: [{\n      expand: true, // should be set to true to find whole path\n      cwd: '<%= project.dist %>',\n      src: [\n        'images/**/*.ico', 'images/**/*.png', 'images/**/*.jpeg'\n      ]\n    }, {\n      expand: true, // should be set to true to find whole path\n      cwd: '<%= project.dist %>', // use your project destination\n      src: [\n        'styles/**/*.css'\n      ]\n    }, {\n      expand: true, // should be set to true to find whole path\n      cwd: '<%= project.dist %>', // use your project destination\n      src: [\n        'scripts/**/*.js'\n      ]\n    }]\n  }\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_Version: 0.3.2_\n",
  "readmeFilename": "README.md",
  "gitHead": "6fbb55ae1154ab65579a7a06b4e3f21537d49ee7",
  "_id": "grunt-cloudinary@0.1.2",
  "_shasum": "e29c57b34399a2dc347c483ea999838c69278067",
  "_from": "grunt-cloudinary@*"
}
